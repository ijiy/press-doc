import{_ as n,c as s,o as a,a1 as p}from"./chunks/framework.B3EJgH_4.js";const y=JSON.parse('{"title":"ESLint格式化 【.eslintrc】","description":"","frontmatter":{},"headers":[],"relativePath":"convention/eslintrc.md","filePath":"convention/eslintrc.md","lastUpdated":1715407916000}'),l={name:"convention/eslintrc.md"},e=p(`<h1 id="eslint格式化-【-eslintrc】" tabindex="-1">ESLint格式化 【.eslintrc】 <a class="header-anchor" href="#eslint格式化-【-eslintrc】" aria-label="Permalink to &quot;ESLint格式化 【.eslintrc】&quot;">​</a></h1><ul><li><a href="https://eslint.org/docs/rules" target="_blank" rel="noreferrer">eslint convention</a></li></ul><h2 id="eslint有争议的规则" tabindex="-1">ESLint有争议的规则 <a class="header-anchor" href="#eslint有争议的规则" aria-label="Permalink to &quot;ESLint有争议的规则&quot;">​</a></h2><ul><li><p>no-magic-numbers, 禁用魔术数字 (建议用常量声明数字, 并注释该数字含义)</p></li><li><p>guard-for-in, 遍历要排除原型链继承来的属性 (很多情况并没必要, 反而影响性能)</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> obj </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {a: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, b: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (item </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> obj) {</span></span>
<span class="line"><span style="color:#F92672;">	if</span><span style="color:#F8F8F2;"> (obj.hasOwnProperty.</span><span style="color:#A6E22E;">call</span><span style="color:#F8F8F2;">(obj, item)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">		console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(item, obj[item]);</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Object.</span><span style="color:#A6E22E;">keys</span><span style="color:#F8F8F2;">(obj).</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(item, obj[item]);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><p>func-name-matching, 函数名与赋值给它们的变量名一样 (不要用这种写法)</p></li><li><p>multiline-ternary, 复杂语句不建议使用三元表达式</p></li><li><p>个别注意注释</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">/* eslint-disable camelcase */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="ide配置" tabindex="-1">IDE配置 <a class="header-anchor" href="#ide配置" aria-label="Permalink to &quot;IDE配置&quot;">​</a></h2><ul><li><a href="./../tool/webstorm#配置ESLint">Webstorm</a></li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-cjs line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cjs</span><pre class="shiki monokai vp-code"><code><span class="line"><span>module.exports = {</span></span>
<span class="line"><span>	root: true,</span></span>
<span class="line"><span>	env: {</span></span>
<span class="line"><span>		browser: true,</span></span>
<span class="line"><span>		es2021: true,</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>	parser: &#39;vue-eslint-parser&#39;,</span></span>
<span class="line"><span>	parserOptions: {</span></span>
<span class="line"><span>		ecmaVersion: &#39;latest&#39;,</span></span>
<span class="line"><span>		sourceType: &#39;module&#39;,</span></span>
<span class="line"><span>		parser: &#39;@typescript-eslint/parser&#39;,</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>	extends: [</span></span>
<span class="line"><span>		&#39;eslint:recommended&#39;,</span></span>
<span class="line"><span>		&#39;plugin:vue/vue3-recommended&#39;,</span></span>
<span class="line"><span>		&#39;plugin:@typescript-eslint/recommended&#39;,</span></span>
<span class="line"><span>		&#39;plugin:jsdoc/recommended&#39;,</span></span>
<span class="line"><span>		&#39;plugin:prettier/recommended&#39;,</span></span>
<span class="line"><span>	],</span></span>
<span class="line"><span>	rules: {</span></span>
<span class="line"><span>		// 推荐, 无法自动修复</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// 允许 未定义变量 (通过 TS 推导是否未定义)</span></span>
<span class="line"><span>		&#39;no-undef&#39;: 0,</span></span>
<span class="line"><span>		// 允许 catch参数未使用</span></span>
<span class="line"><span>		&#39;no-unused-vars&#39;: [1, { caughtErrors: &#39;none&#39; }],</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// 非推荐, 无法自动修复</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// 禁止 在循环中出现await</span></span>
<span class="line"><span>		&#39;no-await-in-loop&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 常量使用二进制表达式</span></span>
<span class="line"><span>		&#39;no-constant-binary-expression&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 重复的模块导入</span></span>
<span class="line"><span>		// &#39;no-duplicate-imports&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 new String, Number, Boolean</span></span>
<span class="line"><span>		&#39;no-new-wrappers&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 new Symbol, BigInt</span></span>
<span class="line"><span>		&#39;no-new-native-nonconstructor&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 Promise 执行程序函数返回值 (可以在\`return new Promise(...)\`前判断并使用\`return Promise.reject();\`)</span></span>
<span class="line"><span>		&#39;no-promise-executor-return&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 自身比较</span></span>
<span class="line"><span>		&#39;no-self-compare&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 在常规字符串中出现模板字面量占位符语法</span></span>
<span class="line"><span>		&#39;no-template-curly-in-string&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 未修改的循环条件</span></span>
<span class="line"><span>		&#39;no-unmodified-loop-condition&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 未使用的私有类成员</span></span>
<span class="line"><span>		&#39;no-unused-private-class-members&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 使用只允许一次迭代的主体的循环</span></span>
<span class="line"><span>		&#39;no-unreachable-loop&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 变量在定义之前被使用 (互相引用的函数, 用注释忽略; 或第2个函数前置定义空函数, 原有位置改成赋予新函数)</span></span>
<span class="line"><span>		&#39;no-use-before-define&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 在else前使用return</span></span>
<span class="line"><span>		&#39;no-else-return&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 循环中存在函数</span></span>
<span class="line"><span>		&#39;no-loop-func&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 连续赋值</span></span>
<span class="line"><span>		&#39;no-multi-assign&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 变量声明覆盖外层作用域的变量</span></span>
<span class="line"><span>		&#39;no-shadow&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 throw 文本内容, 应该使用 throw new Error(&quot;异常内容&quot;);</span></span>
<span class="line"><span>		&#39;no-throw-literal&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 不必要的call和apply, 它们比正常的函数调用效率低</span></span>
<span class="line"><span>		&#39;no-useless-call&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 不必要的字符拼接</span></span>
<span class="line"><span>		&#39;no-useless-concat&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 不必要的构造函数</span></span>
<span class="line"><span>		&#39;no-useless-constructor&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 从构造函数返回值</span></span>
<span class="line"><span>		&#39;no-constructor-return&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 alert, confirm</span></span>
<span class="line"><span>		&#39;no-alert&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 eval</span></span>
<span class="line"><span>		&#39;no-eval&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 隐式的eval, 如 setTimeout(&quot;alert(&#39;a&#39;)&quot;);</span></span>
<span class="line"><span>		&#39;no-implied-eval&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 标签语句</span></span>
<span class="line"><span>		&#39;no-labels&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 new Function</span></span>
<span class="line"><span>		&#39;no-new-func&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 __proto__, 替代方案 getPrototypeOf, setPrototypeOf</span></span>
<span class="line"><span>		&#39;no-proto&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 javascript: url</span></span>
<span class="line"><span>		&#39;no-script-url&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 逗号操作符</span></span>
<span class="line"><span>		&#39;no-sequences&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 void</span></span>
<span class="line"><span>		&#39;no-void&#39;: 1,</span></span>
<span class="line"><span>		// 要求 数组方法的回调中有return</span></span>
<span class="line"><span>		&#39;array-callback-return&#39;: 1,</span></span>
<span class="line"><span>		// 要求 在变量定义的范围内使用变量</span></span>
<span class="line"><span>		&#39;block-scoped-var&#39;: 1,</span></span>
<span class="line"><span>		// 要求 default要放在case后</span></span>
<span class="line"><span>		&#39;default-case-last&#39;: 1,</span></span>
<span class="line"><span>		// 要求 默认参数在最后</span></span>
<span class="line"><span>		&#39;default-param-last&#39;: 1,</span></span>
<span class="line"><span>		// 要求 尽可能不要函数命名</span></span>
<span class="line"><span>		&#39;func-names&#39;: [1, &#39;never&#39;],</span></span>
<span class="line"><span>		// 要求 使用函数表达式</span></span>
<span class="line"><span>		&#39;func-style&#39;: 1,</span></span>
<span class="line"><span>		// 要求 使用\`new Error\`或\`new TypeError\` 代替 文本内容, 作为Promise的reject结果</span></span>
<span class="line"><span>		&#39;prefer-promise-reject-errors&#39;: 1,</span></span>
<span class="line"><span>		// 要求 剩余参数 代替 arguments</span></span>
<span class="line"><span>		&#39;prefer-rest-params&#39;: 1,</span></span>
<span class="line"><span>		// 要求 扩展对象 代替 apply, 如 foo(...obj) 代替 foo.apply(null, obj)</span></span>
<span class="line"><span>		&#39;prefer-spread&#39;: 1,</span></span>
<span class="line"><span>		// 要求 async有对应的await</span></span>
<span class="line"><span>		&#39;require-await&#39;: 1,</span></span>
<span class="line"><span>		// 要求 注释在代码上方</span></span>
<span class="line"><span>		&#39;line-comment-position&#39;: 1,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// 非推荐, 自动修复</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// 禁止 if作为唯一语句出现在else中</span></span>
<span class="line"><span>		&#39;no-lonely-if&#39;: 1,</span></span>
<span class="line"><span>		// 禁用 var</span></span>
<span class="line"><span>		&#39;no-var&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 将变量初始化为undefined</span></span>
<span class="line"><span>		&#39;no-undef-init&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 存在更简单的替代方案时, 使用三元运算符</span></span>
<span class="line"><span>		&#39;no-unneeded-ternary&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 在对象中使用不必要的计算属性</span></span>
<span class="line"><span>		&#39;no-useless-computed-key&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 不必要的import解构重命名</span></span>
<span class="line"><span>		&#39;no-useless-rename&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 不必要的return</span></span>
<span class="line"><span>		&#39;no-useless-return&#39;: 1,</span></span>
<span class="line"><span>		// 要求 控制语句要有大括号</span></span>
<span class="line"><span>		curly: 1,</span></span>
<span class="line"><span>		// 要求 尽可能使用点号代替[]</span></span>
<span class="line"><span>		&#39;dot-notation&#39;: 1,</span></span>
<span class="line"><span>		// 要求 使用 === 和 !==</span></span>
<span class="line"><span>		eqeqeq: 1,</span></span>
<span class="line"><span>		// 要求 对象字面量中方法和属性使用简写语法</span></span>
<span class="line"><span>		&#39;object-shorthand&#39;: 1,</span></span>
<span class="line"><span>		// 要求 变量分开声明</span></span>
<span class="line"><span>		&#39;one-var&#39;: [1, &#39;never&#39;],</span></span>
<span class="line"><span>		// 要求 const 代替 let 声明不再被修改的变量</span></span>
<span class="line"><span>		&#39;prefer-const&#39;: 1,</span></span>
<span class="line"><span>		// 要求 箭头函数 代替 function 作为回调函数</span></span>
<span class="line"><span>		&#39;prefer-arrow-callback&#39;: 1,</span></span>
<span class="line"><span>		// 要求 幂运算符 代替 幂函数, 如 2 ** 8 代替 Math.pow(2, 8)</span></span>
<span class="line"><span>		&#39;prefer-exponentiation-operator&#39;: 1,</span></span>
<span class="line"><span>		// 要求 对象扩展 代替 Object.assign, 如 {...obj} 代替 Object.assign({}, obj);</span></span>
<span class="line"><span>		&#39;prefer-object-spread&#39;: 1,</span></span>
<span class="line"><span>		// 要求 模板字符串 代替 拼接字符串</span></span>
<span class="line"><span>		&#39;prefer-template&#39;: 1,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// vue</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// 允许 一个单词作为组件名 (尽可能使用multi-word, 大驼峰格式)</span></span>
<span class="line"><span>		&#39;vue/multi-word-component-names&#39;: 0,</span></span>
<span class="line"><span>		&#39;vue/attribute-hyphenation&#39;: 0,</span></span>
<span class="line"><span>		// 要求 驼峰格式作为模板上的事件命名</span></span>
<span class="line"><span>		&#39;vue/v-on-event-hyphenation&#39;: [1, &#39;never&#39;],</span></span>
<span class="line"><span>		// 要求 模块顺序</span></span>
<span class="line"><span>		&#39;vue/component-tags-order&#39;: [</span></span>
<span class="line"><span>			1,</span></span>
<span class="line"><span>			{</span></span>
<span class="line"><span>				order: [&#39;template&#39;, &#39;script&#39;, &#39;style&#39;],</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>		],</span></span>
<span class="line"><span>		// 要求 &lt;script&gt; 有 lang=&quot;ts&quot;</span></span>
<span class="line"><span>		&#39;vue/block-lang&#39;: [</span></span>
<span class="line"><span>			1,</span></span>
<span class="line"><span>			{</span></span>
<span class="line"><span>				script: {</span></span>
<span class="line"><span>					lang: &#39;ts&#39;,</span></span>
<span class="line"><span>				},</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>		],</span></span>
<span class="line"><span>		// 要求 &lt;script&gt; 有 setup</span></span>
<span class="line"><span>		&#39;vue/component-api-style&#39;: [1, [&#39;script-setup&#39;]],</span></span>
<span class="line"><span>		// 要求 emits(&#39;camelCase&#39;) 必须小驼峰</span></span>
<span class="line"><span>		&#39;vue/custom-event-name-casing&#39;: 1,</span></span>
<span class="line"><span>		// 要求 defineEmits 正确的类型定义 (type-based)</span></span>
<span class="line"><span>		&#39;vue/define-emits-declaration&#39;: 1,</span></span>
<span class="line"><span>		// 要求 defineProps 正确的类型定义 (type-based)</span></span>
<span class="line"><span>		&#39;vue/define-props-declaration&#39;: 1,</span></span>
<span class="line"><span>		// 要求 宏的约定排序</span></span>
<span class="line"><span>		&#39;vue/define-macros-order&#39;: [</span></span>
<span class="line"><span>			1,</span></span>
<span class="line"><span>			{</span></span>
<span class="line"><span>				order: [</span></span>
<span class="line"><span>					&#39;defineOptions&#39;,</span></span>
<span class="line"><span>					&#39;defineModel&#39;,</span></span>
<span class="line"><span>					&#39;defineProps&#39;,</span></span>
<span class="line"><span>					&#39;defineEmits&#39;,</span></span>
<span class="line"><span>					&#39;defineSlots&#39;,</span></span>
<span class="line"><span>				],</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>		],</span></span>
<span class="line"><span>		// 禁用 v-text</span></span>
<span class="line"><span>		&#39;vue/no-v-text&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 :class=&quot;[{..}, {..}]&quot;使用多个对象</span></span>
<span class="line"><span>		&#39;vue/no-multiple-objects-in-class&#39;: 1,</span></span>
<span class="line"><span>		// 禁止 &lt;template&gt;, &lt;script&gt;, &lt;style&gt; 内容为空</span></span>
<span class="line"><span>		&#39;vue/no-empty-component-block&#39;: 1,</span></span>
<span class="line"><span>		// 要求 &lt;template&gt;, &lt;script&gt;, &lt;style&gt; 之间换行</span></span>
<span class="line"><span>		&#39;vue/padding-line-between-blocks&#39;: 1,</span></span>
<span class="line"><span>		// 要求 v-bind 简写</span></span>
<span class="line"><span>		&#39;vue/prefer-true-attribute-shorthand&#39;: 1,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// typescript</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// 允许 使用 any</span></span>
<span class="line"><span>		&#39;@typescript-eslint/no-explicit-any&#39;: 0,</span></span>
<span class="line"><span>		// 允许 使用 Function</span></span>
<span class="line"><span>		&#39;@typescript-eslint/ban-types&#39;: 0,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// jsdoc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		// 允许 注释没有 returns</span></span>
<span class="line"><span>		&#39;jsdoc/require-returns&#39;: 0,</span></span>
<span class="line"><span>		// 允许 注释没有 type (通过 ts 表示参数类型)</span></span>
<span class="line"><span>		&#39;jsdoc/require-param-type&#39;: 0,</span></span>
<span class="line"><span>		// 允许 returns 没有 type (通过 ts 表示返回类型)</span></span>
<span class="line"><span>		&#39;jsdoc/require-returns-type&#39;: 0,</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br></div></div>`,11),t=[e];function r(i,c,b,u,o,m){return a(),s("div",null,t)}const F=n(l,[["render",r]]);export{y as __pageData,F as default};
