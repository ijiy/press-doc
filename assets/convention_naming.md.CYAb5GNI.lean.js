import{_ as l,c as i,a0 as o,o as c}from"./chunks/framework.Bakaa70P.js";const g=JSON.parse('{"title":"规范 【命名】","description":"","frontmatter":{},"headers":[],"relativePath":"convention/naming.md","filePath":"convention/naming.md","lastUpdated":1726826048000}'),d={name:"convention/naming.md"};function t(a,e,u,n,s,p){return c(),i("div",null,e[0]||(e[0]=[o('<h1 id="规范-【命名】" tabindex="-1">规范 【命名】 <a class="header-anchor" href="#规范-【命名】" aria-label="Permalink to &quot;规范 【命名】&quot;">​</a></h1><ul><li><p>常规</p><ul><li><code>class</code>函数名 <ul><li>大驼峰 (<code>PascalCase</code> 帕斯卡拼写法)</li><li>若默认导出<code>class</code>函数, 则使用大驼峰, 且命名和<code>class</code>函数名一致, 不必以<code>plug</code>开头 <ul><li>eg: <code>class AaBb {}</code>, <code>AaBb.ts</code></li></ul></li></ul></li><li>路由页面name <ul><li>大驼峰, 以<code>N</code>开头</li><li>eg: <code>defineOptions({name: &#39;NXxYy&#39;});</code> (由<code>vue/component-definition-name-casing</code>约定, 自动修复: 大驼峰格式)</li></ul></li><li>常量 <ul><li>全大写 (<code>UPPERCASE</code>), 以下划线<code>_</code>连接</li><li>eg: <code>AABB_XXYY</code></li></ul></li><li>变量, 函数, emits <ul><li>小驼峰 (<code>lowerCamelCase</code>)</li><li>变量, 以名词开头 <ul><li><code>let dataList;</code></li></ul></li><li>函数, 以动词开头 <ul><li><code>get</code> (获取), <code>set</code> (设置), <code>is</code> (判断是否等于), <code>has</code> (判断是否包含), <code>can</code> (判断是否允许), <code>load</code> (加载)</li><li>eg: <code>const getData = () =&gt; {};</code></li></ul></li><li>emits <ul><li>eg: <code>emits(&#39;open&#39;)</code> (由<code>vue/custom-event-name-casing</code>约定)</li></ul></li></ul></li><li><code>id</code>, <code>ref</code><ul><li>全小写, 以下划线<code>_</code>连接 (<code>kebab_case</code>)</li><li>eg: <code>&lt;img id=&quot;id_ab&quot; ref=&quot;ref_ab/&gt;</code></li></ul></li><li>样式类名, 样式属性, 标签属性, 非自定义组件标签 (HTML基本标签或<code>app.component</code>定义的标签) <ul><li>全小写, 以中划线<code>-</code>连接 (<code>kebab-case</code>)</li><li>vue中标签属性, 自定义组件使用小驼峰</li><li>html中标签属性大写, js无法识别</li><li>eg: <code>&lt;el-input value-on-clear=&quot;min&quot; class=&quot;aa-bb&quot;/&gt;</code>, <code>&lt;DiyAaBb :dataList=&quot;[]&quot; /&gt;</code></li></ul></li></ul></li><li><p>ts类型</p><ul><li>默认 <ul><li>大驼峰, 以<code>TS</code>开头</li></ul></li><li>全局 <ul><li>大驼峰, 以<code>TG</code>开头</li></ul></li><li>接口 (apis) <ul><li>大驼峰, 以<code>TA</code>开头</li><li>返回数据, 以<code>Res</code>结尾</li><li>参数, 以<code>Arg</code>结尾</li></ul></li><li>储存库 (store) <ul><li>大驼峰, 以<code>TU</code>开头</li></ul></li></ul></li><li><p>文件名</p><ul><li>插件 (utils) <ul><li>小驼峰, 以<code>plug</code>开头</li></ul></li><li>存储库 (store) <ul><li>小驼峰, 以<code>use</code>开头</li><li>推荐默认导出 (<code>export default defineStore</code>)</li><li>eg: <code>useConfig.ts</code>, <code>const {aA} = useConfig();</code> (变量名冲突, 使用解构重命名: <code>{aA: reName}</code>)</li></ul></li><li>路由页面 (views) <ul><li>大驼峰, 1级目录, 以<code>A</code>开头</li><li>2级目录, 以<code>B</code>开头, 以此类推</li><li>以文件夹包裹, 即<code>文件名/index.vue</code></li><li>eg: <code>views/AXxYy/index.vue</code></li></ul></li><li>接口 (apis) <ul><li>小驼峰, 以<code>api</code>开头</li><li>以文件夹包裹, 即<code>api文件名/index.ts</code></li></ul></li><li>组件页面 (components) <ul><li>以文件夹包裹, 即<code>Diy大驼峰/index.vue</code>, 或<code>diy小驼峰/大驼峰.vue</code></li><li>eg: <code>components/DiyAaBb/index.vue</code>, <code>&lt;DiyAaBb/&gt;</code></li><li>eg: <code>components/diyXxYy/DiyAaBb.vue</code>, <code>&lt;DiyAaBb/&gt;</code></li></ul></li></ul></li></ul>',2)]))}const m=l(d,[["render",t]]);export{g as __pageData,m as default};
