import{_ as s,c as n,o as a,a1 as l}from"./chunks/framework.B3EJgH_4.js";const d=JSON.parse('{"title":"Midway","description":"","frontmatter":{},"headers":[],"relativePath":"project/server/midway/index.md","filePath":"project/server/midway/index.md","lastUpdated":1715407916000}'),p={name:"project/server/midway/index.md"},e=l(`<h1 id="midway" tabindex="-1">Midway <a class="header-anchor" href="#midway" aria-label="Permalink to &quot;Midway&quot;">​</a></h1><h2 id="环境" tabindex="-1">环境 <a class="header-anchor" href="#环境" aria-label="Permalink to &quot;环境&quot;">​</a></h2><ul><li><p><code>node -v</code> -&gt; <code>v16.14.2</code></p></li><li><p><code>pnpm -v</code> -&gt; <code>6.32.3</code></p></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#E6DB74;"> i</span><span style="color:#E6DB74;"> pnpm</span><span style="color:#AE81FF;"> -g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># lint -&gt; build 启动</span></span>
<span class="line"><span style="color:#A6E22E;">pm2</span><span style="color:#E6DB74;"> start</span><span style="color:#E6DB74;"> ./bootstrap.js</span><span style="color:#AE81FF;"> --name</span><span style="color:#E6DB74;"> midway_app</span><span style="color:#AE81FF;"> -i</span><span style="color:#AE81FF;"> 4</span></span>
<span class="line"><span style="color:#88846F;">## \`-i 4\` 开启4个进程, 去掉就只有1个进程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 删除</span></span>
<span class="line"><span style="color:#A6E22E;">pm2</span><span style="color:#E6DB74;"> delete</span><span style="color:#E6DB74;"> midway_app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 停止</span></span>
<span class="line"><span style="color:#A6E22E;">pm2</span><span style="color:#E6DB74;"> stop</span><span style="color:#E6DB74;"> midway_app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 列表</span></span>
<span class="line"><span style="color:#A6E22E;">pm2</span><span style="color:#E6DB74;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 访问</span></span>
<span class="line"><span style="color:#A6E22E;">http://localhost:7001</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;"># 初始化</span></span>
<span class="line"><span style="color:#A6E22E;">pnpm</span><span style="color:#E6DB74;"> init</span><span style="color:#E6DB74;"> midway</span></span>
<span class="line"><span style="color:#88846F;">## egg-v3 - A web application boilerplate with midway v3(egg)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 安装</span></span>
<span class="line"><span style="color:#A6E22E;">pnpm</span><span style="color:#E6DB74;"> i</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">##</span></span>
<span class="line"><span style="color:#A6E22E;">pnpm</span><span style="color:#E6DB74;"> add</span><span style="color:#E6DB74;"> pm2</span><span style="color:#AE81FF;"> -g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 运行</span></span>
<span class="line"><span style="color:#A6E22E;">pnpm</span><span style="color:#E6DB74;"> run</span><span style="color:#E6DB74;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 访问</span></span>
<span class="line"><span style="color:#A6E22E;">http://localhost:7001</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 部署</span></span>
<span class="line"><span style="color:#A6E22E;">pnpm</span><span style="color:#E6DB74;"> start</span></span>
<span class="line"><span style="color:#A6E22E;">pnpm</span><span style="color:#E6DB74;"> stop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 检测</span></span>
<span class="line"><span style="color:#A6E22E;">pnpm</span><span style="color:#E6DB74;"> run</span><span style="color:#E6DB74;"> lint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 测试</span></span>
<span class="line"><span style="color:#A6E22E;">pnpm</span><span style="color:#E6DB74;"> test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><ul><li>修改端口 <ul><li>package.json</li></ul></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">&quot;scripts&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#E6DB74;"> {</span></span>
<span class="line"><span style="color:#A6E22E;">	&quot;dev&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#E6DB74;"> &quot; --port=7001&quot;,</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>可能的换行符问题 <ul><li>git</li></ul></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">git</span><span style="color:#E6DB74;"> config</span><span style="color:#AE81FF;"> --global</span><span style="color:#E6DB74;"> core.autocrlf</span><span style="color:#AE81FF;"> false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>编译 <ul><li>要求集成 ts, vue 的 IDE, 如 webstorm</li></ul></li></ul><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">├──</span><span style="color:#E6DB74;"> src</span></span>
<span class="line"><span style="color:#A6E22E;">│</span><span style="color:#E6DB74;">   └──</span><span style="color:#E6DB74;"> controller</span></span>
<span class="line"><span style="color:#A6E22E;">│</span><span style="color:#E6DB74;">       └──</span><span style="color:#E6DB74;"> home.controller.ts</span></span>
<span class="line"><span style="color:#A6E22E;">└──</span><span style="color:#E6DB74;"> tsconfig.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>controller, 控制器, 文件名和函数名, 没有引用关联, 作用: <ul><li>数据 <ul><li>从数据库 / 其它服务器中, 返回查找的内容</li><li>将提交的内容, 更新到数据库中</li></ul></li><li>路由 <ul><li>根据访问的地址, 返回对应的 页面 / 接口</li></ul></li></ul></li></ul><h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><ul><li>controller 处理的数据, 可以从 装饰器 / api 中获取 <ul><li>装饰的<code>&lt;Class&gt;</code>会在进程加载中被实例化, 且仅有一次</li><li>装饰器 (标识下一条语句类型) <ul><li><code>@Controller(&#39;/&#39;);</code> Web控制器<code>&lt;Class&gt;</code>, 参数 (指向访问的页面地址 / 接口地址), 包含<code>@Provide</code>, 不需重复暴露</li><li><code>@Provide();</code> 暴露依赖<code>&lt;Class&gt;</code>, 参数(表示_id)</li><li><code>@Inject();</code> 注入依赖, 参数(表示_id)</li><li><code>@Query(&#39;id&#39;);</code> 返回对应参数 (?id=1), <code>@Query()</code> 返回包含所有参数的对象</li></ul></li><li>api <ul><li><code>this.ctx.request.body;</code></li><li><code>this.ctx.response.body</code>, 简写成 <code>this.ctx.body</code></li><li><code>this.ctx.query;</code></li><li><code>this.ctx.get(&#39;cache-control&#39;);</code></li></ul></li></ul></li></ul><p>后面统一优先使用<code>装饰器</code></p><h3 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// src/controller/home.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Configuration, Controller, Inject, Get, Post } </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;@midwayjs/decorator&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Context } </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;egg&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// HomeController 函数, 提供给路由 &#39;/&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 忽略路由前缀</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Controller</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/api&#39;</span><span style="color:#F8F8F2;">, {ignoreGlobalPrefix: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 导入组件</span></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Configuration</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  imports: [</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">      component: info,</span></span>
<span class="line"><span style="color:#F8F8F2;">      enabledEnvironment: [</span><span style="color:#E6DB74;">&#39;local&#39;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  ],</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#66D9EF;font-style:italic;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">HomeController</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#88846F;">	// Get, Post, Put, Del, Patch, Options, Head, All</span></span>
<span class="line"><span style="color:#88846F;">	// home 方法, 只能通过 Get 请求, 提供给路由 &#39;/&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">	@</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">	@</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/main&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">	@</span><span style="color:#A6E22E;">ContentType</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;html&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">	async</span><span style="color:#A6E22E;"> home</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">		return</span><span style="color:#E6DB74;"> &#39;&lt;body&gt;hello world&lt;/body&gt;&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">	@</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">	async</span><span style="color:#A6E22E;"> getUser</span><span style="color:#F8F8F2;">(@</span><span style="color:#A6E22E;">Query</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;id&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#FD971F;font-style:italic;">id</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> string</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Promise</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">User</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#88846F;">		// xxxx</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">	// 注入上下文, 对应 @Provide(); 暴露函数</span></span>
<span class="line"><span style="color:#F8F8F2;">	@</span><span style="color:#A6E22E;">Inject</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#88846F;">	// 定义 ctx 指向 import 的函数; 在函数中通过 this.ctx 访问上下文</span></span>
<span class="line"><span style="color:#88846F;">	// 相当于 const ctx = new Context();</span></span>
<span class="line"><span style="color:#F8F8F2;">	ctx</span><span style="color:#F92672;">:</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Context</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">	@</span><span style="color:#A6E22E;">Get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">	async</span><span style="color:#A6E22E;"> getUser</span><span style="color:#F8F8F2;">()</span><span style="color:#F92672;">:</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Promise</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">User</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		const</span><span style="color:#F8F8F2;"> query </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> this</span><span style="color:#F8F8F2;">.ctx.query;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">		// set cookie</span></span>
<span class="line"><span style="color:#FD971F;">	    this</span><span style="color:#F8F8F2;">.ctx.cookies.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;foo&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;bar&#39;</span><span style="color:#F8F8F2;">, { encrypt: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#88846F;">	    // get cookie</span></span>
<span class="line"><span style="color:#FD971F;">	    this</span><span style="color:#F8F8F2;">.ctx.cookies.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;foo&#39;</span><span style="color:#F8F8F2;">, { encrypt: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h2 id="文献-🎨" tabindex="-1">文献 🎨 <a class="header-anchor" href="#文献-🎨" aria-label="Permalink to &quot;文献 🎨&quot;">​</a></h2><ul><li><a href="http://www.midwayjs.org/docs/intro" target="_blank" rel="noreferrer">文档</a></li></ul>`,22),o=[e];function r(c,t,i,F,b,y){return a(),n("div",null,o)}const m=s(p,[["render",r]]);export{d as __pageData,m as default};
