import{_ as n,c as a,a0 as l,o as e}from"./chunks/framework.Bakaa70P.js";const d=JSON.parse('{"title":"uniapp 基础 【未分类混合】","description":"","frontmatter":{},"headers":[],"relativePath":"uniapp/base.md","filePath":"uniapp/base.md","lastUpdated":1716256931000}'),p={name:"uniapp/base.md"};function o(c,s,i,r,t,F){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="uniapp-基础-【未分类混合】" tabindex="-1">uniapp 基础 【未分类混合】 <a class="header-anchor" href="#uniapp-基础-【未分类混合】" aria-label="Permalink to &quot;uniapp 基础 【未分类混合】&quot;">​</a></h1><h2 id="性能" tabindex="-1">性能 <a class="header-anchor" href="#性能" aria-label="Permalink to &quot;性能&quot;">​</a></h2><ul><li><p>非渲染数据, 不要定义在 <code>data() {}</code> 中, 可以放在 export 外 - export 外的变量不随页面销毁, 要在 <code>onLoad() {}</code> 或 <code>onUnload() {}</code> 中重置</p></li><li><p>服务端图片资源要开启HTTP缓存机制</p></li></ul><h2 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h2><ul><li><p>不要设置<code>px</code>作为像素单位, 应该使用<code>rpx</code></p></li><li><p>一像素的边框, 依旧用&quot;1px&quot;, 而不用&quot;1rpx&quot;或&quot;.01rem&quot;等转换单位</p></li><li><p>自定义状态栏</p></li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">view</span></span>
<span class="line"><span style="color:#F8F8F2;">	:</span><span style="color:#A6E22E;">style</span><span style="color:#F8F8F2;">=</span><span style="color:#F8F8F2;">&quot;</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">		height: </span><span style="color:#A6E22E;">var</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">--</span><span style="color:#F8F8F2;">status</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">bar</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">height)</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span><span style="color:#F8F8F2;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>底部安全区域高度</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F92672;">div</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	padding-bottom</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">calc</span><span style="color:#F8F8F2;">(env(safe-area-inset-bottom));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>较早的安卓设备, 不支持 <ul><li><code>padding-inline</code>, <code>inset</code>, <code>inset-inline</code>, <code>border-block</code>等</li><li><code>aspect-ratio</code></li></ul></li></ul><h2 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h2><ul><li><p><code>scroll-view</code>要有一个view包裹, 要设置高度或view设置高度; 要添加 <code>scroll-x=&quot;true&quot;</code> 符合横向滚动规范, 便于样式自动化处理</p></li><li><p>避免采用 mode=&quot;widthFix&quot; 自适应图片高度</p></li><li><p><code>movable-view</code>, 添加 <code>inertia</code>, 在app上会意外超出可视区</p></li><li><p><code>picker</code>, <code>mode=&quot;date&quot;</code>, <code>start=&quot;1990-01-01&quot;</code>, 不能是&quot;1990-1-1&quot;</p></li><li><p>不支持</p><ul><li><code>异步组件</code> (<code>defineAsyncComponent</code>)</li><li><code>过渡组件</code> (<code>transition</code>, <code>transition-group</code>)</li><li><code>keep-alive</code></li></ul></li><li><p>不要直接绝对定位页面顶部 (下拉刷新时, 绝对定位的模块不会跟随下拉)</p><ul><li>使用 <code>position: sticky; top: 0;</code> 代替绝对定位</li></ul></li><li><p>全部采用系统确认框, 不要自定义的, 以保持一致的确认框风格</p><ul><li>位置授权必须先使用系统确认框询问</li><li>页面返回询问对话框, 也是系统确认框 (wx.enableAlertBeforeUnload)</li></ul></li></ul><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2><ul><li><p>App.vue</p><ul><li>onLaunch, 初始化完成时触发 (全局只触发一次)</li><li>onShow, 启动, 或 后台进入前台</li><li>onHide, 前台进入后台</li></ul></li><li><p>页面 (不要使用<code>vue</code>的生命周期)</p><ul><li>created, 数据构建期间, 参数无效</li><li>onLoad, 页面加载完成, 参数为传递的数据</li><li>onShow, 页面显示 (相当于 mounted), 频繁触发: 包括返回显示, 切回前台</li><li>onReady, 页面渲染完成, 只执行一次, 区别于 onShow</li><li>onHide, 与 onShow 对立</li><li>onUnload, 页面卸载, 当跳转其它页面前会触发</li><li>onPullDownRefresh, 下拉 (下拉刷新)</li><li>onReachBottom, 滚到页底 (获取更多数据)</li><li>onTabItemTap, 点 tab 返回 <code>{index: &quot;tabItem的序号, 从0开始&quot;, pagePath, text}</code></li><li>onShareAppMessage, 分享朋友</li><li>onShareTimeline, 分享朋友圈</li><li>onAddToFavorites, 收藏</li><li>onPageScroll, 页面滚动</li><li>onBackPress, 侦听页面返回来源 (左上角按钮返回, 或 navigateBack)</li></ul></li><li><p>组件</p><ul><li>同<code>vue</code>的生命周期, 使用参考<a href="./../vue/vue3/life">vue3 【生命周期】</a></li></ul></li><li><p>使用示例</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">	onBackPress,</span></span>
<span class="line"><span style="color:#F8F8F2;">} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;@dcloudio/uni-app&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">onBackPress</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">options</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> any</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	if</span><span style="color:#F8F8F2;"> (options.from </span><span style="color:#F92672;">===</span><span style="color:#E6DB74;"> &#39;navigateBack&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">		// 自定义跳转不拦截</span></span>
<span class="line"><span style="color:#F92672;">		return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">	} </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#88846F;">		// 拦截返回操作, 并执行自定义操作</span></span>
<span class="line"><span style="color:#88846F;">		// ref_confirm.value.open();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">		return</span><span style="color:#AE81FF;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="数据缓存" tabindex="-1">数据缓存 <a class="header-anchor" href="#数据缓存" aria-label="Permalink to &quot;数据缓存&quot;">​</a></h2><ul><li>设置缓存</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 同步</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">setStorageSync</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;val&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 异步</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">setStorage</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">	key: </span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	data: </span><span style="color:#E6DB74;">&#39;val&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>获取缓存</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 同步</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> uni.</span><span style="color:#A6E22E;">getStorageSync</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 异步</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">getStorage</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">	key: </span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#A6E22E;">	success</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">res</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#88846F;">		// value = res</span></span>
<span class="line"><span style="color:#F8F8F2;">	},</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>清除缓存</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 同步</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">removeStorageSync</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 异步</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">removeStorage</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">	key: </span><span style="color:#E6DB74;">&#39;key&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 清除全部</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">clearStorage</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h2><ul><li><p>vue2 在uniapp中使用 与 在vue/cli的使用差异</p><ul><li><code>@click=&quot;x(y)&quot;</code><ul><li>vue/cli, 会提前执行 <ul><li>正确: <code>@click=&quot;() =&gt; x(y)&quot;</code></li></ul></li></ul></li><li><code>:style=&quot;\`width: \${x}px;\`&quot;</code><ul><li>uniapp, 无效 <ul><li>正确: <code>:style=&quot;{width: x + &#39;px&#39;}&quot;</code></li></ul></li></ul></li><li><code>computed({set() {}})</code><ul><li>uniapp, 只能 <code>get</code>, <code>set</code>无效 <ul><li>正确: 用<code>watch</code>代替</li></ul></li></ul></li></ul></li><li><p><code>tabBar</code>页面始终在进程中, 切换页面没有 <code>onUnload</code> 的概念</p><ul><li>谨慎 <code>watch</code>, 即使切换其它页面, 也会执行侦听, 请求, 计算等</li><li>切换其它页面后, 计算的 <code>boundingClientRect</code> 是错误的 (比如 height 负数)</li></ul></li><li><p><code>reLaunch</code> 后无法关闭 <code>subNVue</code></p></li><li><p><code>restart</code> 后 <code>onNetworkStatusChange</code> 中的 <code>showToast</code> 会一直存在</p></li><li><p><code>uni.$once</code></p><ul><li>要放在 onload 中, 建议放在 subNvue show 之后</li><li>虽然只是执行一次, 但方法还是存在的, 所以, 需要在 <code>onUnload</code> 中执行 <code>uni.$off</code></li></ul></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#A6E22E;">onload</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 像这样, 返回再进入页面, 就无效了, 而且还会导致对应emit触发时报错</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">$once</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><p>nvue, WKWebview, 资源跨域请求 (比如通过 <code>XMLHttpRequest</code> 请求 <code>file://xxx</code> 文件)</p><ul><li>暂不支持, 等待开放 <code>allowFileAccessFromFileURLs</code></li><li>解决方式: 使用 vue <ul><li>无法使用<code>onPostMessage</code>和<code>evalJs</code></li></ul></li></ul></li><li><p>导航栏高度</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// APP</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">getSystemInfoSync</span><span style="color:#F8F8F2;">().safeArea.top </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &#39;px&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 小程序</span></span>
<span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">getMenuButtonBoundingClientRect</span><span style="color:#F8F8F2;">().top </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &#39;px&#39;</span><span style="color:#F8F8F2;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>状态栏高度</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">uni.</span><span style="color:#A6E22E;">getSystemInfoSync</span><span style="color:#F8F8F2;">().statusBarHeight </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &#39;px&#39;</span><span style="color:#F8F8F2;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>vite导入<code>pages.json</code> (vue2无效)</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> {pages} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;../pages&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="tabbar图标" tabindex="-1">TabBar图标 <a class="header-anchor" href="#tabbar图标" aria-label="Permalink to &quot;TabBar图标&quot;">​</a></h2><ul><li>大小建议<code>72x72</code> (<code>iconWidth</code>, 默认<code>24x24</code>), 即3倍图 <ul><li>可以修改的, 如<code>iconWidth</code>改成<code>30x30</code>, 那么建议图标大小为<code>90x90</code></li></ul></li></ul><h2 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h2><ul><li>navigateTo 等路由跳转, url 地址前要有一个 <code>/</code>, 如 &#39;/pages/index/index&#39;, 否则不跳转</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F44747;">navigator</span><span style="color:#A6E22E;"> :url</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;&#39;/pages/navigate/navigate?item=&#39;+ encodeURIComponent(JSON.stringify(item))&quot;</span><span style="color:#A6E22E;"> open-type</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;switchTab&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F44747;">navigator</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>open-type: navigate, redirect, switchTab, reLaunch, navigateBack, exit</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 页面接受参数, 参数为数值会变为字符串</span></span>
<span class="line"><span style="color:#A6E22E;">onLoad</span><span style="color:#F8F8F2;">(option)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#88846F;">	// 跳转前, 关闭当前页面</span></span>
<span class="line"><span style="color:#F8F8F2;">	uni.</span><span style="color:#A6E22E;">navigateTo</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">		url: </span><span style="color:#E6DB74;">&#39;test?id=1&amp;name=uniapp&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">	// 跳转前, 关闭当前页面 (无法返回被关闭的页面, export 外定义的变量不会被重置)</span></span>
<span class="line"><span style="color:#F8F8F2;">	uni.</span><span style="color:#A6E22E;">redirectTo</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">		url: </span><span style="color:#E6DB74;">&#39;/url&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">	// 跳转前, 关闭所有页面</span></span>
<span class="line"><span style="color:#F8F8F2;">	uni.</span><span style="color:#A6E22E;">reLaunch</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">		url: </span><span style="color:#E6DB74;">&#39;/url&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">	// 跳转 tabBar 前, 关闭所有非 tabBar 的页面</span></span>
<span class="line"><span style="color:#88846F;">	// 附加参数无效</span></span>
<span class="line"><span style="color:#F8F8F2;">	uni.</span><span style="color:#A6E22E;">switchTab</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">		url: </span><span style="color:#E6DB74;">&#39;/url&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">	// 返回</span></span>
<span class="line"><span style="color:#F8F8F2;">	uni.</span><span style="color:#A6E22E;">navigateBack</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">	/**</span></span>
<span class="line"><span style="color:#88846F;">	 * 参数中包含中文</span></span>
<span class="line"><span style="color:#88846F;">	 * </span><span style="color:#66D9EF;font-style:italic;">@example</span></span>
<span class="line"><span style="color:#88846F;">		onLoad(query) {</span></span>
<span class="line"><span style="color:#88846F;">			this.a = JSON.parse(decodeURIComponent(query.paramA));</span></span>
<span class="line"><span style="color:#88846F;">			this.b = query.paramB;</span></span>
<span class="line"><span style="color:#88846F;">		},</span></span>
<span class="line"><span style="color:#88846F;">	 */</span></span>
<span class="line"><span style="color:#F8F8F2;">	uni.</span><span style="color:#A6E22E;">navigateTo</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">		url: </span><span style="color:#E6DB74;">\`/url?paramA=</span><span style="color:#F92672;">\${</span><span style="color:#A6E22E;">encodeURIComponent</span><span style="color:#F8F8F2;">(JSON.</span><span style="color:#A6E22E;">stringify</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.a))</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">&amp;paramB=</span><span style="color:#F92672;">\${</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.b</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>`,37)]))}const b=n(p,[["render",o]]);export{d as __pageData,b as default};
