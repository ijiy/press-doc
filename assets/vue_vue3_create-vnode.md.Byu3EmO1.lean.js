import{_ as a,c as n,a0 as e,o as l}from"./chunks/framework.Bakaa70P.js";const d=JSON.parse('{"title":"vue3 【渲染函数】","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/create-vnode.md","filePath":"vue/vue3/create-vnode.md","lastUpdated":1715407916000}'),p={name:"vue/vue3/create-vnode.md"};function o(t,s,r,c,F,i){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="vue3-【渲染函数】" tabindex="-1">vue3 【渲染函数】 <a class="header-anchor" href="#vue3-【渲染函数】" aria-label="Permalink to &quot;vue3 【渲染函数】&quot;">​</a></h1><blockquote><p><code>createVnode()</code>简写为 <code>h()</code>, 是 hyperscript 的简称——意思是&quot;能生成 HTML (超文本标记语言) 的 JavaScript&quot;</p><p>源于许多虚拟 DOM 实现默认形成的约定</p></blockquote><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> {h} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> {message} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;ant-design-vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">	message.</span><span style="color:#A6E22E;">success</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">		content: </span><span style="color:#A6E22E;">h</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;div&#39;</span><span style="color:#F8F8F2;">, {innerHTML: </span><span style="color:#E6DB74;">\`&lt;div&gt;任务 &lt;span&gt;xxx</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">statusPop.displayName</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">&lt;/span&gt; xxx</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">labels</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">&lt;/div&gt;\`</span><span style="color:#F8F8F2;">}),</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,4)]))}const y=a(p,[["render",o]]);export{d as __pageData,y as default};
