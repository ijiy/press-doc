import{_ as e,c as i,o as l,a1 as a}from"./chunks/framework.B3EJgH_4.js";const _=JSON.parse('{"title":"vue3","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/index.md","filePath":"vue/vue3/index.md","lastUpdated":1725247280000}'),o={name:"vue/vue3/index.md"},t=a('<h1 id="vue3" tabindex="-1">vue3 <a class="header-anchor" href="#vue3" aria-label="Permalink to &quot;vue3&quot;">​</a></h1><h2 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h2><ul><li><p><a href="./life">生命周期钩子</a></p></li><li><p><a href="./reactivity">响应式对象</a></p></li><li><p><a href="./watcher">侦听与属性计算</a></p></li><li><p><a href="./slot">插槽</a></p></li><li><p><a href="./components">组件</a></p></li><li><p><a href="./router">路由</a></p></li><li><p><a href="./ref">ref</a></p></li><li><p>通信方案</p><ul><li><a href="./msg-props">父子组件 (向下单向) 响应式对象的绑定</a></li><li><a href="./msg-model">父子组件 (可互通) 响应式对象的双向绑定</a></li><li><a href="./msg-ref-emits">父子组件 (可互通) <code>ref</code>引用子组件对象</a></li><li><a href="./msg-provide">后代组件 (可互通) <code>provide</code>向下提供数据</a></li><li><a href="./msg-mitt">全局组件 (可互通) <code>mitt</code>事件总线</a></li><li><a href="./msg-pinia">全局变量 (可互通) 全局状态<code>store</code>中管理变量</a></li><li><a href="./msg-global">全局变量 (不推荐) 全局属性<code>globalProperties</code>上挂载变量</a></li><li>其它方案 <ul><li>通过路由传递数据</li><li>从缓存中获取数据</li><li>从本地文件获取数据</li><li>从服务器获取数据</li></ul></li></ul></li><li><p><a href="./create-vnode">渲染函数</a></p></li><li><p><a href="./type-script">类型定义</a></p></li></ul><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><ul><li><blockquote><p>vue官解: 在使用 <code>&lt;script setup&gt;</code> 的单文件组件中, 导入的组件可以直接在模板中使用, 无需注册</p></blockquote></li><li><p>模板中使用单个根节点, 符合<code>&lt;transition&gt;</code>要求, 以及属性穿透的正确指向</p><ul><li>自定义组件的模板中可以使用单个或多个根节点 (多个根节点, 需要使用<code>useAttrs</code>指向属性穿透目标)</li><li>uniapp, 页面的模板中要使用单个根节点, 避免路由携带参数时, 警告提示</li></ul></li><li><p>CSS 不要同时使用<code>:root</code> + <code>v-bind</code></p><ul><li><code>v-bind</code>只能作用于<code>#app</code>内的元素上 (不包括<code>#app</code>), <code>teleport</code>也无法使用<code>v-bind</code> (可以在<code>style</code>中使用, 或<code>var</code>继承上层变量)</li><li>不要在<code>v-bind</code>中计算, 和不要在<code>template</code>中计算一样的道理, 应该使用计算属性<code>computed</code>, 达到性能优化</li></ul></li></ul>',5),d=[t];function c(r,p,s,n,u,h){return l(),i("div",null,d)}const m=e(o,[["render",c]]);export{_ as __pageData,m as default};
