import{_ as n,c as a,a0 as l,o as p}from"./chunks/framework.Bakaa70P.js";const u=JSON.parse('{"title":"vue3 【父子组件 (可互通) 响应式对象的双向绑定】","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/msg-model.md","filePath":"vue/vue3/msg-model.md","lastUpdated":1725247280000}'),e={name:"vue/vue3/msg-model.md"};function t(o,s,c,r,F,i){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="vue3-【父子组件-可互通-响应式对象的双向绑定】" tabindex="-1">vue3 【父子组件 (可互通) 响应式对象的双向绑定】 <a class="header-anchor" href="#vue3-【父子组件-可互通-响应式对象的双向绑定】" aria-label="Permalink to &quot;vue3 【父子组件 (可互通) 响应式对象的双向绑定】&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><ul><li><p>提取自 <a href="./../dev3/">极简调试配置</a></p></li><li><p>应用场景</p><ul><li>子组件 需要更新父组件的响应式对象</li></ul></li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><ul><li>父组件 (App.vue) <ul><li>可以通过 <code>v-model=&quot;testDef&quot;</code>, 绑定默认对象, 注入属性<code>modelValue</code></li><li>可以通过 <code>v-model:testName=&quot;testName&quot;</code>, 绑定具名对象, 注入属性<code>testName</code></li></ul></li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;父组件&lt;/</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">input</span></span>
<span class="line"><span style="color:#A6E22E;">			v-model</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;dataSRt.testDef&quot;</span></span>
<span class="line"><span style="color:#A6E22E;">			placeholder</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;绑定默认对象&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">		&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">input</span></span>
<span class="line"><span style="color:#A6E22E;">			v-model</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;dataSRt.testName&quot;</span></span>
<span class="line"><span style="color:#A6E22E;">			placeholder</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;绑定具名对象&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">		&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;/</span><span style="color:#F92672;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">Aa</span></span>
<span class="line"><span style="color:#A6E22E;">		v-model</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;dataSRt.testDef&quot;</span></span>
<span class="line"><span style="color:#A6E22E;">		v-model:testName</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;dataSRt.testName&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">	/&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> Aa </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;@/components/Aa.vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">		shallowReactive,</span></span>
<span class="line"><span style="color:#F8F8F2;">	} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TSSRt</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">		testDef</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> string</span></span>
<span class="line"><span style="color:#F8F8F2;">		testName</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> string</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> dataSRt </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> shallowReactive</span><span style="color:#F8F8F2;">(&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TSSRt</span><span style="color:#F8F8F2;">&gt;{</span></span>
<span class="line"><span style="color:#F8F8F2;">		testDef: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">		testName: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><ul><li>子组件 (components/Aa.vue) <ul><li>可以通过 <code>computed</code> -&gt; <code>get</code> (更新子组件的响应式对象), <code>set</code> (更新父组件的响应式对象)</li><li>可以通过 <code>watch</code> (更新子组件的响应式对象); 子组件的响应式对象更新时, 手动更新父组件的响应式对象</li><li>可以通过 <code>defineModel</code> (推荐) 快速简单地实现双向绑定</li></ul></li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;子组件&lt;/</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">input</span><span style="color:#A6E22E;"> v-model</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;testDef&quot;</span><span style="color:#A6E22E;"> placeholder</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;绑定默认对象&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">input</span></span>
<span class="line"><span style="color:#A6E22E;">			v-model</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;dataSRt.testName&quot;</span></span>
<span class="line"><span style="color:#A6E22E;">			placeholder</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;绑定具名对象&quot;</span></span>
<span class="line"><span style="color:#A6E22E;">			@input</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;emits(&#39;update:testName&#39;, dataSRt.testName)&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">		/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">br</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">input</span><span style="color:#A6E22E;"> v-model</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;updateValue&quot;</span><span style="color:#A6E22E;"> placeholder</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;绑定默认对象 - defineModel&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">input</span><span style="color:#A6E22E;"> v-model</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;updateName&quot;</span><span style="color:#A6E22E;"> placeholder</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;绑定具名对象 - defineModel&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;/</span><span style="color:#F92672;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> { computed, watch, shallowReactive } </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TSProps</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">		modelValue</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		testName</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> props</span><span style="color:#F92672;">:</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TSProps</span><span style="color:#F92672;"> =</span><span style="color:#A6E22E;"> withDefaults</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">defineProps</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TSProps</span><span style="color:#F8F8F2;">&gt;(), {</span></span>
<span class="line"><span style="color:#F8F8F2;">		modelValue: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">		testName: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> updateValue </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> defineModel</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> updateName </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> defineModel</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#E6DB74;">&#39;testName&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> emits </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> defineEmits</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;update:modelValue&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;update:testName&#39;</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> testDef </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> computed</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#A6E22E;">		get</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F92672;">			return</span><span style="color:#F8F8F2;"> props.modelValue;</span></span>
<span class="line"><span style="color:#F8F8F2;">		},</span></span>
<span class="line"><span style="color:#A6E22E;">		set</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#A6E22E;">			emits</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;update:modelValue&#39;</span><span style="color:#F8F8F2;">, val);</span></span>
<span class="line"><span style="color:#F8F8F2;">		},</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TSSRt</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">		testName</span><span style="color:#F92672;">?:</span><span style="color:#66D9EF;font-style:italic;"> string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> dataSRt </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> shallowReactive</span><span style="color:#F8F8F2;">(&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TSSRt</span><span style="color:#F8F8F2;">&gt;{</span></span>
<span class="line"><span style="color:#F8F8F2;">		testName: </span><span style="color:#AE81FF;">undefined</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">	watch</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">		() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> props.testName,</span></span>
<span class="line"><span style="color:#F8F8F2;">		(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">?:</span><span style="color:#66D9EF;font-style:italic;"> string</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">			dataSRt.testName </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val;</span></span>
<span class="line"><span style="color:#F8F8F2;">		},</span></span>
<span class="line"><span style="color:#F8F8F2;">		{</span></span>
<span class="line"><span style="color:#F8F8F2;">			immediate: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">		}</span></span>
<span class="line"><span style="color:#F8F8F2;">	);</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div>`,8)]))}const b=n(e,[["render",t]]);export{u as __pageData,b as default};
