import{_ as n,c as a,a0 as l,o as p}from"./chunks/framework.Bakaa70P.js";const u=JSON.parse('{"title":"vue3 【全局变量 (可互通) 全局状态store中管理变量】","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/msg-pinia.md","filePath":"vue/vue3/msg-pinia.md","lastUpdated":1716256931000}'),e={name:"vue/vue3/msg-pinia.md"};function o(t,s,r,c,F,i){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="vue3-【全局变量-可互通-全局状态store中管理变量】" tabindex="-1">vue3 【全局变量 (可互通) 全局状态<code>store</code>中管理变量】 <a class="header-anchor" href="#vue3-【全局变量-可互通-全局状态store中管理变量】" aria-label="Permalink to &quot;vue3 【全局变量 (可互通) 全局状态\`store\`中管理变量】&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><ul><li><p>提取自 <a href="./../dev3/">极简调试配置</a></p></li><li><p>应用场景</p><ul><li>共享全局数据 <ul><li>数据类型可以是响应式变量, 或静态数据</li><li>不限于组件, 如在<code>axios</code>中使用<code>token</code></li></ul></li><li>可以通过提供一个更改数据的方法函数, 来更改全局数据 <ul><li>共享方法 应该放在<code>utils</code>中</li></ul></li></ul></li><li><p>安装<code>pinia</code> (状态管理库)</p><ul><li><code>pnpm add pinia</code></li><li>通常会结合<code>pinia-plugin-persistedstate</code>使用 (uniapp不支持, 这里也不赘述)</li></ul></li></ul><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><ul><li><p>只使用<code>shallowReactive</code>作为响应式变量的声明方式</p><ul><li>其它方式都不推荐</li></ul></li><li><blockquote><p>vue官解: 与任何全局的东西一样, 应该谨慎使用</p></blockquote><ul><li>其作用于项目全局, 非全局数据, 不应该用这种方式</li></ul></li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><ul><li>注册全局 (main.js)</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> {createApp} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> App </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;./App.vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> {createPinia} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;pinia&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">createApp</span><span style="color:#F8F8F2;">(App).</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">createPinia</span><span style="color:#F8F8F2;">()).</span><span style="color:#A6E22E;">mount</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;#app&#39;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>状态管理 (store/index.js)</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">	defineStore,</span></span>
<span class="line"><span style="color:#F8F8F2;">} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;pinia&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">	shallowReactive,</span></span>
<span class="line"><span style="color:#F8F8F2;">} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#66D9EF;font-style:italic;"> const</span><span style="color:#F8F8F2;"> testData </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> defineStore</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#88846F;">	// 这里的key, 只是作为状态管理的唯一标识, 不能用symbol</span></span>
<span class="line"><span style="color:#E6DB74;">	&#39;test_key&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		const</span><span style="color:#F8F8F2;"> dataTest </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> shallowReactive</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">			testA: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">		});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">		/**</span></span>
<span class="line"><span style="color:#88846F;">		 * 通常不会直接去修改状态中的变量</span></span>
<span class="line"><span style="color:#88846F;">		 */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">		const</span><span style="color:#A6E22E;"> setTestA</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">			dataTest.testA </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">		};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">		return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">			dataTest,</span></span>
<span class="line"><span style="color:#F8F8F2;">			setTestA,</span></span>
<span class="line"><span style="color:#F8F8F2;">		};</span></span>
<span class="line"><span style="color:#F8F8F2;">	},</span></span>
<span class="line"><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><ul><li>触发修改全局状态的响应式变量 (App.vue)</li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">Aa</span><span style="color:#F8F8F2;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">button</span><span style="color:#A6E22E;"> @click</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;setTestA&quot;</span><span style="color:#F8F8F2;">&gt;点击&lt;/</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> Aa </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;@/components/Aa.vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">		testData,</span></span>
<span class="line"><span style="color:#F8F8F2;">	} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;@/store&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> {setTestA} </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> testData</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>接收全局状态的响应式变量 (components/Aa.vue)</li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;{{dataTest.testA}}&lt;/</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">		testData,</span></span>
<span class="line"><span style="color:#F8F8F2;">	} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;@/store&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> {dataTest} </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> testData</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,14)]))}const b=n(e,[["render",o]]);export{u as __pageData,b as default};
