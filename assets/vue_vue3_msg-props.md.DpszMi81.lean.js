import{_ as n,c as a,a0 as l,o as p}from"./chunks/framework.Bakaa70P.js";const u=JSON.parse('{"title":"vue3 【父子组件 (向下单向) 响应式对象的绑定】","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/msg-props.md","filePath":"vue/vue3/msg-props.md","lastUpdated":1716256931000}'),e={name:"vue/vue3/msg-props.md"};function t(o,s,r,c,F,i){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="vue3-【父子组件-向下单向-响应式对象的绑定】" tabindex="-1">vue3 【父子组件 (向下单向) 响应式对象的绑定】 <a class="header-anchor" href="#vue3-【父子组件-向下单向-响应式对象的绑定】" aria-label="Permalink to &quot;vue3 【父子组件 (向下单向) 响应式对象的绑定】&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><ul><li><p>提取自 <a href="./../dev3/">极简调试配置</a></p></li><li><p>应用场景</p><ul><li>父组件动态获取数据, 子组件展示数据</li></ul></li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><ul><li>父组件 (App.vue) <ul><li>给子组件绑定响应式对象</li></ul></li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;父组件&lt;/</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">input</span></span>
<span class="line"><span style="color:#A6E22E;">			v-model</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;dataSRt.testData&quot;</span></span>
<span class="line"><span style="color:#A6E22E;">			placeholder</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;动态获取数据&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">		&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;/</span><span style="color:#F92672;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">Aa</span></span>
<span class="line"><span style="color:#A6E22E;">		:testData</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;dataSRt.testData&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">	/&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> Aa </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;@/components/Aa.vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">		shallowReactive,</span></span>
<span class="line"><span style="color:#F8F8F2;">	} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TSSRt</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">		testData</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;"> string</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> dataSRt</span><span style="color:#F92672;">:</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TSSRt</span><span style="color:#F92672;"> =</span><span style="color:#A6E22E;"> shallowReactive</span><span style="color:#F8F8F2;">(&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TSSRt</span><span style="color:#F8F8F2;">&gt;{</span></span>
<span class="line"><span style="color:#F8F8F2;">		testData: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><ul><li>子组件 (components/Aa.vue) <ul><li>可通过 <code>testData</code>, 展示数据 <ul><li>可想而知, 子组件 顶层变量的命名不能和<code>props</code>的属性相同</li><li>当然, 这是不规范的使用方式</li></ul></li><li>可通过 <code>props.testData</code> 展示数据 <ul><li>正确的使用方式</li></ul></li></ul></li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;子组件&lt;/</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">		&lt;</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;展示数据: {{props.testData}}&lt;/</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;/</span><span style="color:#F92672;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	interface</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TSProps</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#88846F;">		// \`withDefaults\`, 标注\`props\`属性都有默认值, 也意味着其属性都非\`required\`, 即属性类型应该都是\`?:\`</span></span>
<span class="line"><span style="color:#88846F;">		// 没使用默认值, 都应该是按\`required\`处理</span></span>
<span class="line"><span style="color:#F8F8F2;">		testData</span><span style="color:#F92672;">?:</span><span style="color:#66D9EF;font-style:italic;"> string</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> props</span><span style="color:#F92672;">:</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TSProps</span><span style="color:#F92672;"> =</span><span style="color:#A6E22E;"> withDefaults</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">defineProps</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">TSProps</span><span style="color:#F8F8F2;">&gt;(), {</span></span>
<span class="line"><span style="color:#F8F8F2;">		testData: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	});</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,8)]))}const b=n(e,[["render",t]]);export{u as __pageData,b as default};
