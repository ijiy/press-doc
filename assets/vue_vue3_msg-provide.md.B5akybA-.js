import{_ as s,c as a,o as n,a1 as l}from"./chunks/framework.B3EJgH_4.js";const b=JSON.parse('{"title":"vue3 【后代组件 (可互通) provide向下提供数据】","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/msg-provide.md","filePath":"vue/vue3/msg-provide.md","lastUpdated":1716256931000}'),p={name:"vue/vue3/msg-provide.md"},e=l(`<h1 id="vue3-【后代组件-可互通-provide向下提供数据】" tabindex="-1">vue3 【后代组件 (可互通) <code>provide</code>向下提供数据】 <a class="header-anchor" href="#vue3-【后代组件-可互通-provide向下提供数据】" aria-label="Permalink to &quot;vue3 【后代组件 (可互通) \`provide\`向下提供数据】&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><ul><li><p>提取自 <a href="./../dev3/">极简调试配置</a></p></li><li><p>应用场景</p><ul><li>供给方组件 向后代组件 (包括 父子组件) 提供 <code>shallowRef</code>响应式对象 <ul><li>也可以是非响应式数据, 函数等</li></ul></li><li>和<code>store</code>一样, 可以通过提供一个更改数据的方法函数, 来更改供给方组件的数据</li></ul></li><li><p>提供 <code>provide</code> 和 注入 <code>inject</code>, 都要在<code>setup</code>的顶层作用域下</p></li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><ul><li>父组件 (App.vue) <ul><li>向后代组件提供 <code>shallowRef</code>响应式对象</li></ul></li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">Aa</span><span style="color:#F8F8F2;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;"> @</span><span style="color:#A6E22E;">click</span><span style="color:#F8F8F2;">=</span><span style="color:#F8F8F2;">&quot;</span><span style="color:#F8F8F2;">testData </span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">&quot;</span><span style="color:#F8F8F2;">&gt;点击&lt;/</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> Aa </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;@/components/Aa.vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> {provide, shallowRef} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> testData </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> shallowRef</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">	// 提供 (注入名, 值)</span></span>
<span class="line"><span style="color:#A6E22E;">	provide</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;test_data&#39;</span><span style="color:#F8F8F2;">, testData);</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>后代组件 (components/Aa.vue)</li></ul><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">	&lt;</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;{{testData}}&lt;/</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">script</span><span style="color:#A6E22E;"> setup</span><span style="color:#A6E22E;"> lang</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;ts&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F92672;">	import</span><span style="color:#F8F8F2;"> {inject} </span><span style="color:#F92672;">from</span><span style="color:#E6DB74;"> &#39;vue&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">	// 注入 (注入名, 默认值)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> testData </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> inject</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;test_data&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,8),o=[e];function t(r,c,F,i,y,u){return n(),a("div",null,o)}const m=s(p,[["render",t]]);export{b as __pageData,m as default};
