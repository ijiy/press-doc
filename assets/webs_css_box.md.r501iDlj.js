import{_ as i,c as l,o as e,a1 as a}from"./chunks/framework.B3EJgH_4.js";const b=JSON.parse('{"title":"理论 【盒模型】","description":"","frontmatter":{},"headers":[],"relativePath":"webs/css/box.md","filePath":"webs/css/box.md","lastUpdated":1715407916000}'),o={name:"webs/css/box.md"},d=a('<h1 id="理论-【盒模型】" tabindex="-1">理论 【盒模型】 <a class="header-anchor" href="#理论-【盒模型】" aria-label="Permalink to &quot;理论 【盒模型】&quot;">​</a></h1><h2 id="盒子模型的定义" tabindex="-1">盒子模型的定义 <a class="header-anchor" href="#盒子模型的定义" aria-label="Permalink to &quot;盒子模型的定义&quot;">​</a></h2><ul><li>由 <code>margin</code>, <code>padding</code>, <code>border</code>, <code>width</code>, <code>height</code>及<code>内容</code>构成布局区域</li></ul><h2 id="盒子的宽高设定" tabindex="-1">盒子的宽高设定 <a class="header-anchor" href="#盒子的宽高设定" aria-label="Permalink to &quot;盒子的宽高设定&quot;">​</a></h2><ul><li><p>标准的盒子大小, 由padding, border, width, height决定宽高</p></li><li><p>在开发中, 常用 box-sizing, 去改变盒子宽高的设定, 而IE的盒子模型便得到更好的体现</p></li></ul><h2 id="盒子的渲染规则" tabindex="-1">盒子的渲染规则 <a class="header-anchor" href="#盒子的渲染规则" aria-label="Permalink to &quot;盒子的渲染规则&quot;">​</a></h2><ul><li>决定盒子内容的排版与盒子间的作用. 有BFC, IFC, GFC, FFC</li></ul><h3 id="bfc" tabindex="-1">BFC <a class="header-anchor" href="#bfc" aria-label="Permalink to &quot;BFC&quot;">​</a></h3><p>块级格式化上下文, 即块元素的内部排版规则</p><ul><li><p>规定盒子垂直布局</p><ul><li>相邻盒子margin会重叠</li><li>盒子从贴着容器侧边开始</li><li>不与容器外的浮动盒子重叠</li><li>浮动盒子参与容器高度计算</li><li>盒子不影响到容器外</li></ul></li><li><p>触发该规则</p><ul><li>display: <code>flex</code> | <code>block</code>; (等, 块级格式化)</li><li>float: <code>left</code> | <code>right</code>;</li><li>position: <code>absolute</code> | <code>fixed</code>;</li><li>overflow: <code>hidden</code> | <code>auto</code> (等, 滚动)</li></ul></li><li><p>作用</p><ul><li>避免相邻盒子的margin重叠</li><li>解决浮动脱离文档流导致重叠</li><li>解决浮动导致容器塌陷</li><li>解决<code>img</code>等行块元素出现下边距</li></ul></li></ul><h3 id="ifc" tabindex="-1">IFC <a class="header-anchor" href="#ifc" aria-label="Permalink to &quot;IFC&quot;">​</a></h3><ul><li><p>内联格式化上下文, 即内联元素的内部排版规则</p></li><li><p>规定不容许含有块元素</p></li><li><p>水平布局</p></li><li><p>盒模型的构成只有水平margin, padding, border及内容</p></li><li><p>触发该规则</p><ul><li>font-size</li><li>line-height</li><li>vertical-aligin</li></ul></li><li><p>作用</p><ul><li>解决内容垂直居中, 行高一致</li></ul></li></ul><h3 id="gfc" tabindex="-1">GFC <a class="header-anchor" href="#gfc" aria-label="Permalink to &quot;GFC&quot;">​</a></h3><p>网格布局: <code>display: grid;</code></p><h3 id="ffc" tabindex="-1">FFC <a class="header-anchor" href="#ffc" aria-label="Permalink to &quot;FFC&quot;">​</a></h3><p>弹性布局: <code>display: flex/inline-flex;</code>;</p>',16),c=[d];function t(r,n,h,s,p,u){return e(),l("div",null,c)}const _=i(o,[["render",t]]);export{b as __pageData,_ as default};
