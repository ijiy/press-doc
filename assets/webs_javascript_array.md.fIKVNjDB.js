import{_ as s,c as n,o as a,a1 as l}from"./chunks/framework.B3EJgH_4.js";const d=JSON.parse('{"title":"JS 数组 【Array】","description":"","frontmatter":{},"headers":[],"relativePath":"webs/javascript/array.md","filePath":"webs/javascript/array.md","lastUpdated":1718695853000}'),p={name:"webs/javascript/array.md"},e=l(`<h1 id="js-数组-【array】" tabindex="-1">JS 数组 【Array】 <a class="header-anchor" href="#js-数组-【array】" aria-label="Permalink to &quot;JS 数组 【Array】&quot;">​</a></h1><h2 id="创建" tabindex="-1">创建 <a class="header-anchor" href="#创建" aria-label="Permalink to &quot;创建&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-label="Permalink to &quot;类型&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: object</span></span>
<span class="line"><span style="color:#F92672;">typeof</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: function Array() { [native code] }</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">().constructor;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: Array</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">().constructor.name;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="长度" tabindex="-1">长度 <a class="header-anchor" href="#长度" aria-label="Permalink to &quot;长度&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: 3</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]).length;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: 3</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">).length;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><code>length</code> 赋值, 会改变原数组</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">a.length </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [1, 2]</span></span>
<span class="line"><span style="color:#F8F8F2;">a;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="成员" tabindex="-1">成员 <a class="header-anchor" href="#成员" aria-label="Permalink to &quot;成员&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: 3</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">])[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: 3</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">])[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: undefined</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="增删" tabindex="-1">增删 <a class="header-anchor" href="#增删" aria-label="Permalink to &quot;增删&quot;">​</a></h2><ul><li>只能从数组前或后增删 <ul><li>原数组改变, 返回数组长度; 注释结果为 a 的值</li></ul></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 从后面添加成员, jg: [1, 2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 从前面添加成员, jg: [-1, 0, 1, 2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">unshift</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 从后面删除一个成员, jg: [-1, 0, 1, 2]</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">pop</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 从前面删除一个成员, jg: [0, 1, 2]</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">shift</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>比较 arr.push 和 arr[arr.length] 的效率</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">time</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;use time&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// use time: 0.00390625 ms</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">timeEnd</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;use time&#39;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">time</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;use time&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">a[a.length] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#88846F;">// use time: .0068359375 ms</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">timeEnd</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;use time&#39;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div style="display:flex;justify-content:space-evenly;"><table><thead><tr><th><code>push</code> 耗时 (ms)</th></tr></thead><tbody><tr><td>.00390625</td></tr><tr><td>.002685546875</td></tr><tr><td>.00390625</td></tr><tr><td>.0029296875</td></tr><tr><td>.00390625</td></tr><tr><td>.003173828125</td></tr></tbody></table><table><thead><tr><th><code>length</code> 耗时 (ms)</th></tr></thead><tbody><tr><td>.0068359375</td></tr><tr><td>.005859375</td></tr><tr><td>.005859375</td></tr><tr><td>.008056640625</td></tr><tr><td>.008056640625</td></tr><tr><td>.006103515625</td></tr></tbody></table></div><p>以上数据, 通过递进数组内容的复杂度 (长度, 成员类型), 多次得出的统计结果</p><p>显而易见, push 所耗时间更短</p><ul><li>Array.splice(i, n, a1, a2...) <ul><li>删除从位置 i 包括 i 之后的 n 个成员(n为0表示不删除), 在位置 i 之前增加a1, a2...</li><li>原数组改变, 返回被删成员集合; 注释结果为 a 的值</li></ul></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [1, &#39;a&#39;, &#39;b&#39;]</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">splice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [1, &#39;a&#39;, &#39;b&#39;]</span></span>
<span class="line"><span style="color:#F8F8F2;">a;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="获取" tabindex="-1">获取 <a class="header-anchor" href="#获取" aria-label="Permalink to &quot;获取&quot;">​</a></h2><ul><li>Array.slice(i, j) <ul><li>获取位置 i 包括 i 到位置 j 但不包括 j 的成员</li><li>原数组不变</li></ul></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [2]</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 当 j 不存在, 获取位置 i 包括 i 之后的所有成员, jg: [2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 当 j 小于零, 获取位置 i 包括 i 到数组倒数位置(j = -1, 即倒一)且不包括该位置的成员, jg: [2]</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>比较 slice 和 length 的效率</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">time</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;use time&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// jg: [1, 2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(a.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#88846F;">// use time: 0.19384765625 ms</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">timeEnd</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;use time&#39;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">time</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;use time&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">a.length </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#88846F;">// jg: [1, 2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(a);</span></span>
<span class="line"><span style="color:#88846F;">// use time: 0.1708984375 ms</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">timeEnd</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;use time&#39;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div style="display:flex;justify-content:space-evenly;"><table><thead><tr><th><code>slice</code> 耗时 (ms)</th></tr></thead><tbody><tr><td>.1708984375</td></tr><tr><td>.279052734375</td></tr><tr><td>.23486328125</td></tr><tr><td>.2099609375</td></tr><tr><td>.175048828125</td></tr><tr><td>.18310546875</td></tr></tbody></table><table><thead><tr><th><code>length</code> 耗时 (ms)</th></tr></thead><tbody><tr><td>.19384765625</td></tr><tr><td>.195068359375</td></tr><tr><td>.281982421875</td></tr><tr><td>.181884765625</td></tr><tr><td>.183837890625</td></tr><tr><td>.22802734375</td></tr></tbody></table></div><p>以上数据, 通过递进数组内容的复杂度 (长度, 成员类型), 多次得出的统计结果</p><p>数据显示, 没有可比较的差距</p><h2 id="交换" tabindex="-1">交换 <a class="header-anchor" href="#交换" aria-label="Permalink to &quot;交换&quot;">​</a></h2><ul><li>Array.copyWithin(p, i, j) <ul><li>复制下标[i, j)之间的成员替换下标[p, )往右同复制长度的成员</li><li>原数组改变, 但长度不会变</li></ul></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">copyWithin</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [1, 3, 4, 4, 5]</span></span>
<span class="line"><span style="color:#F8F8F2;">a;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="翻转" tabindex="-1">翻转 <a class="header-anchor" href="#翻转" aria-label="Permalink to &quot;翻转&quot;">​</a></h2><p>原数组改变</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#A6E22E;">reverse</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [3, 2, 1]</span></span>
<span class="line"><span style="color:#F8F8F2;">a;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h2><ul><li>数值排序</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// 默认\`ASCII码\`大小排序, jg: [11, 2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 按数值大小排序, jg: [2, 3, 11]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">pre</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">cur</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> pre </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> cur);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>字母排序</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// 默认中文靠前, jg: [&#39;钱&#39;, &#39;赵&#39;, &#39;li&#39;, &#39;sun&#39;]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;赵&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;钱&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;sun&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;li&#39;</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">pre</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">cur</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> pre.</span><span style="color:#A6E22E;">localeCompare</span><span style="color:#F8F8F2;">(cur));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 英文靠前, js: [&#39;li&#39;, &#39;sun&#39;, &#39;赵&#39;, &#39;钱&#39;]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;赵&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;钱&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;sun&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;li&#39;</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">pre</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">cur</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> pre.</span><span style="color:#A6E22E;">localeCompare</span><span style="color:#F8F8F2;">(cur, </span><span style="color:#E6DB74;">&#39;en&#39;</span><span style="color:#F8F8F2;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="筛选" tabindex="-1">筛选 <a class="header-anchor" href="#筛选" aria-label="Permalink to &quot;筛选&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// 去重, jg: [1, 2]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">filter</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">index</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> self.</span><span style="color:#A6E22E;">indexOf</span><span style="color:#F8F8F2;">(item) </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> index);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 返回数组中大于2的集合, jg: [3]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">filter</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="拼接" tabindex="-1">拼接 <a class="header-anchor" href="#拼接" aria-label="Permalink to &quot;拼接&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: [0, 1]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">concat</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [1]</span></span>
<span class="line"><span style="color:#F8F8F2;">[].</span><span style="color:#A6E22E;">concat</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="转-字符串" tabindex="-1">转 字符串 <a class="header-anchor" href="#转-字符串" aria-label="Permalink to &quot;转 字符串&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: &#39;1,2&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">join</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: &#39;1-2&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">join</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="最大最小" tabindex="-1">最大最小 <a class="header-anchor" href="#最大最小" aria-label="Permalink to &quot;最大最小&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// 数组中最大值, jg: 3</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.max.</span><span style="color:#A6E22E;">apply</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#88846F;">// 或, jg: 3</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">max</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 数组中最小值, jg: 1</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.min.</span><span style="color:#A6E22E;">apply</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#88846F;">// 或, jg: 1</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">min</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="遍历" tabindex="-1">遍历 <a class="header-anchor" href="#遍历" aria-label="Permalink to &quot;遍历&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, , </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">of</span><span style="color:#F8F8F2;"> arr) {</span></span>
<span class="line"><span style="color:#88846F;">	// jg: 1 undefined</span></span>
<span class="line"><span style="color:#F8F8F2;">	console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(i);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">	if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">i) {</span></span>
<span class="line"><span style="color:#F92672;">		break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// forEach 遍历数组, 跳过空成员, 不能用 break. jg: 1 2</span></span>
<span class="line"><span style="color:#F8F8F2;">arr.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(item));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 跳过空成员, 不会有结果输出</span></span>
<span class="line"><span style="color:#F92672;">new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(item));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="find-遍历数组-返回第一个符合条件的数组成员" tabindex="-1">find 遍历数组, 返回第一个符合条件的数组成员 <a class="header-anchor" href="#find-遍历数组-返回第一个符合条件的数组成员" aria-label="Permalink to &quot;find 遍历数组, 返回第一个符合条件的数组成员&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// 值大于2 &amp;&amp; 下标大于0, jg: 3</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">find</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">index</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> &amp;&amp;</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="every-遍历数组-每一项符合条件-返回-true" tabindex="-1">every 遍历数组, 每一项符合条件, 返回 true <a class="header-anchor" href="#every-遍历数组-每一项符合条件-返回-true" aria-label="Permalink to &quot;every 遍历数组, 每一项符合条件, 返回 true&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">every</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="some-遍历数组-有一项符合条件-返回-true" tabindex="-1">some 遍历数组, 有一项符合条件, 返回 true <a class="header-anchor" href="#some-遍历数组-有一项符合条件-返回-true" aria-label="Permalink to &quot;some 遍历数组, 有一项符合条件, 返回 true&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">some</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="map-flatmap-遍历数组-返回处理过数组成员后的新数组" tabindex="-1">map \\ flatMap 遍历数组, 返回处理过数组成员后的新数组 <a class="header-anchor" href="#map-flatmap-遍历数组-返回处理过数组成员后的新数组" aria-label="Permalink to &quot;map \\ flatMap 遍历数组, 返回处理过数组成员后的新数组&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: [2, , 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, , </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 跳过空成员, jg: [2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, , </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">flatMap</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [{a: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}, {a: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">}];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> x.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#88846F;">	// item 为对象, 是引用数据类型, 直接修改 item, 会改变原数组</span></span>
<span class="line"><span style="color:#F8F8F2;">	item.a</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">	return</span><span style="color:#F8F8F2;"> item;</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [{a: 2}, {a: 3}]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(x);</span></span>
<span class="line"><span style="color:#88846F;">// jg: [{a: 2}, {a: 3}]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(y);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [{a: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}, {a: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">}];</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> myItem;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> x.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#88846F;">	// 这样原数组就不会发生改变了</span></span>
<span class="line"><span style="color:#F8F8F2;">	myItem </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">item};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">	myItem.a</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">	return</span><span style="color:#F8F8F2;"> myItem;</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [{a: 1}, {a: 2}]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(x);</span></span>
<span class="line"><span style="color:#88846F;">// jg: [{a: 2}, {a: 3}]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(y);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>或</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [{a: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">}, {a: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">}];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> x.</span><span style="color:#A6E22E;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">	return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">		...</span><span style="color:#F8F8F2;">item,</span></span>
<span class="line"><span style="color:#F8F8F2;">		a: item.a </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">	};</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [{a: 1}, {a: 2}]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(x);</span></span>
<span class="line"><span style="color:#88846F;">// jg: [{a: 2}, {a: 3}]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(y);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="reduce-递归计算-每一步递归计算的结果-每一步递归参与成员-返回递归结束最终计算的结果" tabindex="-1">reduce 递归计算 (每一步递归计算的结果, 每一步递归参与成员): 返回递归结束最终计算的结果 <a class="header-anchor" href="#reduce-递归计算-每一步递归计算的结果-每一步递归参与成员-返回递归结束最终计算的结果" aria-label="Permalink to &quot;reduce 递归计算 (每一步递归计算的结果, 每一步递归参与成员): 返回递归结束最终计算的结果&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: 6</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, , </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">reduce</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">result</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> item);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="indexof-返回匹配内容的索引值" tabindex="-1">indexOf 返回匹配内容的索引值 <a class="header-anchor" href="#indexof-返回匹配内容的索引值" aria-label="Permalink to &quot;indexOf 返回匹配内容的索引值&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: 1</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 无匹配项, 都是返回 -1, jg: -1</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="includes-是否匹配内容-es6范畴" tabindex="-1">includes 是否匹配内容 (ES6范畴) <a class="header-anchor" href="#includes-是否匹配内容-es6范畴" aria-label="Permalink to &quot;includes 是否匹配内容 (ES6范畴)&quot;">​</a></h2><ul><li>includes(匹配的内容, 开始位置);</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>部分设备不支持, 兼容方案如下</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#66D9EF;font-style:italic;">Array</span><span style="color:#F8F8F2;">.prototype.includes) {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	Array</span><span style="color:#F8F8F2;">.prototype.</span><span style="color:#A6E22E;">includes</span><span style="color:#F92672;"> =</span><span style="color:#66D9EF;font-style:italic;"> function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">value</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">		return</span><span style="color:#FD971F;"> this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">some</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">el</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> el </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> value);</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 不兼容情况下, jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 和 indexOf 类似, 无法准确检测 NaN, jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="isarray-object是否是数组-es6范畴" tabindex="-1">isArray object是否是数组 (ES6范畴) <a class="header-anchor" href="#isarray-object是否是数组-es6范畴" aria-label="Permalink to &quot;isArray object是否是数组 (ES6范畴)&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">Array.</span><span style="color:#A6E22E;">isArray</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">Array.</span><span style="color:#A6E22E;">isArray</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 无法用于判断 Nodelist, 即始终会是 false, jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">Array.</span><span style="color:#A6E22E;">isArray</span><span style="color:#F8F8F2;">(document.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;ul&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">querySelectorAll</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;li&#39;</span><span style="color:#F8F8F2;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>兼容方案</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">Array.isArray) {</span></span>
<span class="line"><span style="color:#F8F8F2;">	Array.</span><span style="color:#A6E22E;">isArray</span><span style="color:#F92672;"> =</span><span style="color:#FD971F;font-style:italic;"> arg</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#66D9EF;font-style:italic;"> function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">arg</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F92672;">		return</span><span style="color:#66D9EF;font-style:italic;"> Object</span><span style="color:#F8F8F2;">.prototype.toString.</span><span style="color:#A6E22E;">call</span><span style="color:#F8F8F2;">(arg) </span><span style="color:#F92672;">===</span><span style="color:#E6DB74;"> &#39;[object Array]&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">	};</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="flat-将嵌套的数组平铺-es6范畴" tabindex="-1">flat 将嵌套的数组平铺 (ES6范畴) <a class="header-anchor" href="#flat-将嵌套的数组平铺-es6范畴" aria-label="Permalink to &quot;flat 将嵌套的数组平铺 (ES6范畴)&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: [1, 2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]].</span><span style="color:#A6E22E;">flat</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#88846F;">// jg: [1, 2, [3]]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]]].</span><span style="color:#A6E22E;">flat</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#88846F;">// jg: [1, 2, 3]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]]].</span><span style="color:#A6E22E;">flat</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">Infinity</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 跳过空成员, jg: [1, 2]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, , </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">flat</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="array-from-转成数组-es6范畴" tabindex="-1">Array.from 转成数组 (ES6范畴) <a class="header-anchor" href="#array-from-转成数组-es6范畴" aria-label="Permalink to &quot;Array.from 转成数组 (ES6范畴)&quot;">​</a></h2><ul><li>比较实用的是将数组的空位转成 <code>undefined</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// jg: [空属性 × 2]</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span style="color:#A6E22E;"> Array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [undefined, undefined]</span></span>
<span class="line"><span style="color:#F8F8F2;">Array.</span><span style="color:#A6E22E;">from</span><span style="color:#F8F8F2;">(a);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="两个数组-获取差异成员" tabindex="-1">两个数组 获取差异成员 <a class="header-anchor" href="#两个数组-获取差异成员" aria-label="Permalink to &quot;两个数组 获取差异成员&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * 获取两个数组间差异的成员</span></span>
<span class="line"><span style="color:#88846F;"> *</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span style="color:#F8F8F2;"> arr1</span><span style="color:#88846F;"> 数组1</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span style="color:#F8F8F2;"> arr2</span><span style="color:#88846F;"> 数组2</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@return</span><span style="color:#88846F;"> any[] 返回: 两个数组间差异的成员</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#A6E22E;"> twoArrDiff</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">arr1</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">arr2</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> arr1.</span><span style="color:#A6E22E;">filter</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> arr2.</span><span style="color:#A6E22E;">indexOf</span><span style="color:#F8F8F2;">(item) </span><span style="color:#F92672;">===</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">concat</span><span style="color:#F8F8F2;">(arr2.</span><span style="color:#A6E22E;">filter</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> arr1.</span><span style="color:#A6E22E;">indexOf</span><span style="color:#F8F8F2;">(item) </span><span style="color:#F92672;">===</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [1, 3]</span></span>
<span class="line"><span style="color:#A6E22E;">twoArrDiff</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">], [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="两个数组-比较大小" tabindex="-1">两个数组 比较大小 <a class="header-anchor" href="#两个数组-比较大小" aria-label="Permalink to &quot;两个数组 比较大小&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// 默认\`ASCII码\`大小规则, jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// [0, 9] 之间可正常比较, jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 两个数组间, 每个成员一对一比较, 从第一个成员开始比较, 只要有一个成员满足条件, 则比较结束, jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 不能比较是否相等, jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#88846F;">// 快捷比较两个数组是否相等 (实际需求成员顺序可能不同)</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">join</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">join</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="获取随机且不重复的整数集合" tabindex="-1">获取随机且不重复的整数集合 <a class="header-anchor" href="#获取随机且不重复的整数集合" aria-label="Permalink to &quot;获取随机且不重复的整数集合&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * 返回随机重组顺序的数组</span></span>
<span class="line"><span style="color:#88846F;"> *</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span style="color:#F8F8F2;"> arr</span><span style="color:#88846F;"> 数组类型不限</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@return</span><span style="color:#88846F;"> any[] 返回: 随机重组后的数组</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#A6E22E;"> randomSort</span><span style="color:#F92672;"> =</span><span style="color:#FD971F;font-style:italic;"> arr</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> arr.</span><span style="color:#A6E22E;">sort</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#AE81FF;"> .5</span><span style="color:#F92672;"> -</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">random</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">/**</span></span>
<span class="line"><span style="color:#88846F;"> * 获取随机且不重复的整数集合</span></span>
<span class="line"><span style="color:#88846F;"> *</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span style="color:#F8F8F2;"> maxNum</span><span style="color:#88846F;"> 范围-最大整数, 必须</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span style="color:#F8F8F2;"> minNum</span><span style="color:#88846F;"> 范围-最小整数, 默认 0</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@param</span><span style="color:#F8F8F2;"> someNum</span><span style="color:#88846F;"> 整数个数, 默认 范围差值</span></span>
<span class="line"><span style="color:#88846F;"> * </span><span style="color:#66D9EF;font-style:italic;">@return</span><span style="color:#88846F;"> number[] 返回: 随机且不重复的整数集合</span></span>
<span class="line"><span style="color:#88846F;"> */</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#A6E22E;"> randomIntSort</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">maxNum</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">minNum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">someNum</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">	const</span><span style="color:#F8F8F2;"> arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">	for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> minNum; i </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> maxNum; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">		arr.</span><span style="color:#A6E22E;">push</span><span style="color:#F8F8F2;">(i);</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">	return</span><span style="color:#A6E22E;"> randomSort</span><span style="color:#F8F8F2;">(arr).</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, someNum);</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: [7, 6]</span></span>
<span class="line"><span style="color:#A6E22E;">randomIntSort</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="es6范畴" tabindex="-1">ES6范畴 <a class="header-anchor" href="#es6范畴" aria-label="Permalink to &quot;ES6范畴&quot;">​</a></h2><ul><li><p><a href="./es6#解构赋值">解构赋值</a></p></li><li><p><a href="./es6#扩展运算符">扩展运算符</a></p></li></ul>`,90),o=[e];function r(c,F,t,i,y,b){return a(),n("div",null,o)}const m=s(p,[["render",r]]);export{d as __pageData,m as default};
