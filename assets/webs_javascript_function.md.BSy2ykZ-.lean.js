import{_ as a,c as n,a0 as l,o as e}from"./chunks/framework.Bakaa70P.js";const F=JSON.parse('{"title":"JS 函数","description":"","frontmatter":{},"headers":[],"relativePath":"webs/javascript/function.md","filePath":"webs/javascript/function.md","lastUpdated":1705388123000}'),o={name:"webs/javascript/function.md"};function t(p,s,c,i,r,d){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="js-函数" tabindex="-1">JS 函数 <a class="header-anchor" href="#js-函数" aria-label="Permalink to &quot;JS 函数&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><ul><li>function 关键字开头 + 函数的名字 + 参数和函数主体</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#A6E22E;"> a</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">b</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">	console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(b);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>const 关键字开头 + 函数的名称 + 参数和函数主体</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#A6E22E;"> a</span><span style="color:#F92672;"> =</span><span style="color:#66D9EF;font-style:italic;"> function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">b</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">	console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(b);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,6)]))}const b=a(o,[["render",t]]);export{F as __pageData,b as default};
