import{_ as n,c as a,a0 as l,o as p}from"./chunks/framework.Bakaa70P.js";const y=JSON.parse('{"title":"JS 类型.数值 【Number】","description":"","frontmatter":{},"headers":[],"relativePath":"webs/javascript/number.md","filePath":"webs/javascript/number.md","lastUpdated":1715407916000}'),e={name:"webs/javascript/number.md"};function o(r,s,c,F,t,i){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="js-类型-数值-【number】" tabindex="-1">JS 类型.数值 【Number】 <a class="header-anchor" href="#js-类型-数值-【number】" aria-label="Permalink to &quot;JS 类型.数值 【Number】&quot;">​</a></h1><h2 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-label="Permalink to &quot;类型&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// jg: &#39;number&#39;</span></span>
<span class="line"><span style="color:#F92672;">typeof</span><span style="color:#AE81FF;"> NaN</span><span style="color:#F8F8F2;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="浮点数值计算异常" tabindex="-1">浮点数值计算异常 <a class="header-anchor" href="#浮点数值计算异常" aria-label="Permalink to &quot;浮点数值计算异常&quot;">​</a></h2><ul><li>无论加减乘除, 浮点数值之间的计算都可能出现异常</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 正确 1.2, jg: 1.2000000000000002</span></span>
<span class="line"><span style="color:#AE81FF;">1.1</span><span style="color:#F92672;"> +</span><span style="color:#AE81FF;"> .1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 正确 1.1, jg: 1.0999999999999999</span></span>
<span class="line"><span style="color:#AE81FF;">1.2</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;"> .1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 正确 1.21, jg: 1.2100000000000002</span></span>
<span class="line"><span style="color:#AE81FF;">1.1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 1.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 正确 12, jg: 11.999999999999998</span></span>
<span class="line"><span style="color:#AE81FF;">1.2</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> .1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>解决方式</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 每个参与计算的成员 * 1e16, 计算后再 / 1e16, jg: 1.2</span></span>
<span class="line"><span style="color:#F8F8F2;">((</span><span style="color:#AE81FF;">1.1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 1e16</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">.1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 1e16</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">/</span><span style="color:#AE81FF;"> 1e16</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: 1.21</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1e16</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 1.1</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">1e16</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 1.1</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">/</span><span style="color:#AE81FF;"> 1e32</span><span style="color:#F8F8F2;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="长整型输出异常" tabindex="-1">长整型输出异常 <a class="header-anchor" href="#长整型输出异常" aria-label="Permalink to &quot;长整型输出异常&quot;">​</a></h2><ul><li>17位或大于17位的整数都会输出异常, 16位以9开头的整数可能输出异常. 即 浏览器转成二进制计算, 超过53个二进制位就无法确保精确</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 正确 16个9, jg: 10000000000000000</span></span>
<span class="line"><span style="color:#AE81FF;">9999999999999999</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 正确 17个2, jg: 22222222222222224</span></span>
<span class="line"><span style="color:#AE81FF;">22222222222222222</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 正确 18个2, jg: 222222222222222200</span></span>
<span class="line"><span style="color:#AE81FF;">222222222222222222</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 8.98846567431158e+307</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1023</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Infinity</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1024</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>解决方式 <ul><li>作为字符串处理, 尤其是后端返回数据</li><li>采用<a href="#bigint">BigInt</a></li></ul></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// jg: 222222222222222222n</span></span>
<span class="line"><span style="color:#AE81FF;">222222222222222222</span><span style="color:#66D9EF;font-style:italic;">n</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: 49382716049382715950617283950617284n</span></span>
<span class="line"><span style="color:#AE81FF;">222222222222222222</span><span style="color:#66D9EF;font-style:italic;">n</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 222222222222222222</span><span style="color:#66D9EF;font-style:italic;">n</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="取整" tabindex="-1">取整 <a class="header-anchor" href="#取整" aria-label="Permalink to &quot;取整&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 只保留\`数值或字符串\`的整数位, jg: 1</span></span>
<span class="line"><span style="color:#A6E22E;">parseInt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1.8</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#A6E22E;">parseInt</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;1.8&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 同 parseInt, jg: 1</span></span>
<span class="line"><span style="color:#F8F8F2;">Number.</span><span style="color:#A6E22E;">parseInt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1.8</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 同 parseInt, jg: 1</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">trunc</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1.8</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 同 parseInt, jg: 1</span></span>
<span class="line"><span style="color:#F92672;">~~</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1.8</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 同 parseInt, jg: 1</span></span>
<span class="line"><span style="color:#AE81FF;">1.8</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="转-string-类型" tabindex="-1">转 String 类型 <a class="header-anchor" href="#转-string-类型" aria-label="Permalink to &quot;转 String 类型&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 或 &#39;&#39; + 3, jg: &#39;3&#39;</span></span>
<span class="line"><span style="color:#AE81FF;">3</span><span style="color:#F92672;"> +</span><span style="color:#E6DB74;"> &#39;&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: &#39;3&#39;</span></span>
<span class="line"><span style="color:#A6E22E;">String</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: &#39;3&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 2进制 (即除尽2取余), jg: &#39;11&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">toString</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: &#39;3&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">toFixed</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 四舍五入 (&gt;= 5 进一位), 保留2位小数, jg: &#39;3.00&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">toFixed</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="类型判断" tabindex="-1">类型判断 <a class="header-anchor" href="#类型判断" aria-label="Permalink to &quot;类型判断&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 是否 NaN, jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">Number.</span><span style="color:#A6E22E;">isNaN</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 是否整数, jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">Number.</span><span style="color:#A6E22E;">isInteger</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1.0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">Number.</span><span style="color:#A6E22E;">isInteger</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1.1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 是否数值, jg: true</span></span>
<span class="line"><span style="color:#F8F8F2;">Number.</span><span style="color:#A6E22E;">isFinite</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">Number.</span><span style="color:#A6E22E;">isFinite</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;1&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// jg: false</span></span>
<span class="line"><span style="color:#F8F8F2;">Number.</span><span style="color:#A6E22E;">isFinite</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">NaN</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="math" tabindex="-1">Math <a class="header-anchor" href="#math" aria-label="Permalink to &quot;Math&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#88846F;">// 随机, (0, 1)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> random </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">random</span><span style="color:#F8F8F2;">()</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 四舍五入, jg: 0 或 1</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">round</span><span style="color:#F8F8F2;">(random);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 向下取整, jg: 0</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">floor</span><span style="color:#F8F8F2;">(random);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 向上取整, jg: 1</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">ceil</span><span style="color:#F8F8F2;">(random);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 取最大值</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">max</span><span style="color:#F8F8F2;">(num1, num2, num3</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 取最小值</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">min</span><span style="color:#F8F8F2;">(num1, num2, num3</span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// π</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.PI;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 绝对值, jg: 1</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">abs</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 平方根, jg: 2</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">sqrt</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 2的3次方 (2 * 2 * 2), jg: 8</span></span>
<span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="bigint" tabindex="-1">BigInt <a class="header-anchor" href="#bigint" aria-label="Permalink to &quot;BigInt&quot;">​</a></h2><ul><li>BigInt(), 转成大整数类型 或 后缀n, 代表没有位数限制的整数</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">53</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">53</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#88846F;"> // 9007199254740992</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">BigInt</span><span style="color:#F8F8F2;">(Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">53</span><span style="color:#F8F8F2;">)) </span><span style="color:#88846F;">// 9007199254740992n</span></span>
<span class="line"><span style="color:#A6E22E;">BigInt</span><span style="color:#F8F8F2;">(Math.</span><span style="color:#A6E22E;">pow</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">53</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#66D9EF;font-style:italic;">n</span><span style="color:#88846F;"> // 9007199254740993n</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,24)]))}const u=n(e,[["render",o]]);export{y as __pageData,u as default};
